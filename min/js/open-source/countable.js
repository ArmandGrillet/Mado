/**
 * Countable is a script to allow for live paragraph-, word- and character-
 * counting on an HTML element.
 *
 * @author   Sacha Schmid (<https://github.com/RadLikeWhoa>)
 * @version  2.0.2
 * @license  MIT
 * @see      <http://radlikewhoa.github.io/Countable/>
 */
(function(global){var _liveElements=[],_event="oninput"in document?"input":"keyup";if(!String.prototype.trim)String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")};function _decode(string){var output=[],counter=0,length=string.length,value,extra;while(counter<length){value=string.charCodeAt(counter++);if((value&63488)==55296&&counter<length){extra=string.charCodeAt(counter++);if((extra&64512)==56320)output.push(((value&1023)<<10)+(extra&1023)+65536);else output.push(value,extra)}else output.push(value)}return output}
function _validateArguments(elements,callback){var elementsValid=elements&&(Object.prototype.toString.call(elements)==="[object NodeList]"&&elements.length||elements.nodeType===1),callbackValid=callback&&typeof callback==="function";if("console"in window&&"warn"in console){if(!elementsValid)console.warn("Countable: No valid elements were found");if(!callbackValid)console.warn('Countable: "'+callback+'" is not a valid callback function')}return elementsValid&&callbackValid}function _extendDefaults(options){var defaults=
{hardReturns:false,stripTags:false,ignoreReturns:false};for(var prop in options)if(defaults.hasOwnProperty(prop))defaults[prop]=options[prop];return defaults}function _count(element,options){var original="value"in element?element.value:element.innerText||element.textContent,trimmed;if(options.stripTags)original=original.replace(/<\/?[a-z][^>]*>/gi,"");trimmed=original.trim();return{paragraphs:trimmed?(trimmed.match(options.hardReturns?/\n{2,}/g:/\n+/g)||[]).length+1:0,words:trimmed?(trimmed.replace(/['";:,.?\u00bf\-!\u00a1]+/g,
"").match(/\S+/g)||[]).length:0,characters:trimmed?_decode(trimmed.replace(/\s/g,"")).length:0,all:_decode(options.ignoreReturns?original.replace(/[\n\r]/g,""):original).length}}function _loop(which,callback){var len=which.length;if(typeof len!=="undefined")while(len--)callback(which[len]);else callback(which)}var Countable={live:function(elements,callback,options){var ops=_extendDefaults(options),bind=function(element){var handler=function(){callback.call(element,_count(element,ops))};_liveElements.push({element:element,
handler:handler});handler();if(element.addEventListener)element.addEventListener(_event,handler,false);else if(element.attachEvent)element.attachEvent("on"+_event,handler)};if(!_validateArguments(elements,callback))return;if(elements.length)_loop(elements,bind);else bind(elements);return this},die:function(elements){if(!_validateArguments(elements,function(){}))return;_loop(elements,function(element){var liveElement;_loop(_liveElements,function(live){if(live.element===element)liveElement=live});if(!liveElement)return;
if(element.removeEventListener)element.removeEventListener(_event,liveElement.handler,false);else if(element.detachEvent)element.detachEvent("on"+_event,liveElement.handler);_liveElements.splice(_liveElements.indexOf(liveElement),1)});return this},once:function(elements,callback,options){if(!_validateArguments(elements,callback))return;_loop(elements,function(element){callback.call(element,_count(element,_extendDefaults(options)))});return this},enabled:function(element){var isEnabled=false;if(element&&
element.nodeType===1)_loop(_liveElements,function(live){if(live.element===element)isEnabled=true});return isEnabled}};if(typeof exports==="object")module.exports=Countable;else if(typeof define==="function"&&define.amd)define(function(){return Countable});else global.Countable=Countable})(this);